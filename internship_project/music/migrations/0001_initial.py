# Generated by Django 5.0.7 on 2024-08-30 13:05

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('year', models.BigIntegerField(blank=True, null=True)),
                ('image', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=255)),
                ('password', models.CharField(max_length=255)),
                ('year_joined', models.BigIntegerField(blank=True, null=True)),
                ('image', models.CharField(blank=True, max_length=255)),
                ('favorite_albums', models.ManyToManyField(blank=True, related_name='made_favorite_album_by_user', to='music.album')),
                ('saved_albums', models.ManyToManyField(blank=True, related_name='saved_by_users', to='music.album')),
            ],
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('image', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Music',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('play_time', models.BigIntegerField()),
                ('image', models.CharField(blank=True, max_length=255)),
                ('audio', models.CharField(blank=True, max_length=255)),
                ('mood', models.CharField(blank=True, max_length=255)),
                ('lyrics', models.FileField(upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='music.user')),
                ('info', models.TextField(blank=True)),
                ('genre', models.ManyToManyField(related_name='genre_artist', to='music.genre')),
            ],
            bases=('music.user',),
        ),
        migrations.CreateModel(
            name='Listener',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='music.user')),
            ],
            bases=('music.user',),
        ),
        migrations.AddField(
            model_name='user',
            name='collections',
            field=models.ManyToManyField(blank=True, related_name='owned_by_users', to='music.collection'),
        ),
        migrations.AddField(
            model_name='collection',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_collections', to='music.user'),
        ),
        migrations.AddField(
            model_name='user',
            name='favorite_genres',
            field=models.ManyToManyField(blank=True, related_name='genre_users', to='music.genre'),
        ),
        migrations.AddField(
            model_name='album',
            name='genre',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='genre_albums', to='music.genre'),
        ),
        migrations.AddField(
            model_name='user',
            name='favorite_songs',
            field=models.ManyToManyField(blank=True, related_name='made_favorite_song_by_user', to='music.music'),
        ),
        migrations.AddField(
            model_name='user',
            name='recently_played',
            field=models.ManyToManyField(blank=True, related_name='recently_played_by_user', to='music.music'),
        ),
        migrations.AddField(
            model_name='music',
            name='album',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='album_musics', to='music.album'),
        ),
        migrations.AddField(
            model_name='music',
            name='genre',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='genre_musics', to='music.genre'),
        ),
        migrations.AddField(
            model_name='music',
            name='played_before',
            field=models.ManyToManyField(related_name='musics_played_before', to='music.user'),
        ),
        migrations.AddField(
            model_name='collection',
            name='musics',
            field=models.ManyToManyField(related_name='music_collection', to='music.music'),
        ),
        migrations.AddField(
            model_name='user',
            name='playlists',
            field=models.ManyToManyField(blank=True, related_name='created_by_users', to='music.playlist'),
        ),
        migrations.AddField(
            model_name='playlist',
            name='musics',
            field=models.ManyToManyField(related_name='music_playlists', to='music.music'),
        ),
        migrations.AddField(
            model_name='playlist',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_playlists', to='music.user'),
        ),
        migrations.AddField(
            model_name='user',
            name='favorite_artists',
            field=models.ManyToManyField(blank=True, related_name='made_favorite_artist_by_user', to='music.artist'),
        ),
        migrations.AddField(
            model_name='music',
            name='artist',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='artist_musics', to='music.artist'),
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('date', models.DateField()),
                ('location', models.TextField()),
                ('info', models.TextField(blank=True)),
                ('image', models.CharField(blank=True, max_length=255)),
                ('is_live_event', models.BooleanField(default=False)),
                ('link', models.CharField(max_length=255)),
                ('artist', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='artist_events', to='music.artist')),
            ],
        ),
        migrations.AddField(
            model_name='album',
            name='artist',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='artist_albums', to='music.artist'),
        ),
    ]
